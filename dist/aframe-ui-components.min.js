!function(e){function t(i){if(r[i])return r[i].exports;var s=r[i]={exports:{},id:i,loaded:!1};return e[i].call(s.exports,s,s.exports,t),s.loaded=!0,s.exports}var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t,r){r(1)},function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("cursor-feedback",{schema:{property:{"default":"scale"},dur:{"default":"300"},to:{"default":"2 2 2"}},multiple:!1,init:function(){this.mouseenter=this.mouseenter.bind(this),this.mouseleave=this.mouseleave.bind(this),this.el.addEventListener("mouseenter",this.mouseenter),this.el.addEventListener("mouseleave",this.mouseleave)},mouseenter:function(e){const t=this.data,r=e.target.states,i=r.indexOf("interactive"),s=e.detail.intersectedEl,n=!!s.dataset.interactive;if(i===-1&&n){r.push("interactive"),e.target.removeAttribute("animation");const o={property:t.property,dur:t.dur,to:t.to};e.target.setAttribute("animation",AFRAME.utils.styleParser.stringify(o))}else if(i>=0&&!n){r.splice(i,1),e.target.removeAttribute("animation");const o={property:t.property,dur:t.dur,to:"1 1 1"};e.target.setAttribute("animation",AFRAME.utils.styleParser.stringify(o))}},mouseleave:function(e){const t=this.data,r=e.target.states,i=r.indexOf("interactive");if(i>=0){r.splice(i,1),e.target.removeAttribute("animation");const s={property:t.property,dur:t.dur,to:"1 1 1"};e.target.setAttribute("animation",AFRAME.utils.styleParser.stringify(s))}},remove:function(){this.el.removeAttribute("animation"),this.el.removeEventListener("mouseenter",this.mouseenter),this.el.removeEventListener("mouseleave",this.mouseleave)}})}]);